// Code generated by protoc-gen-go. DO NOT EDIT.
// source: worker.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Info struct {
	CpuCores             int32    `protobuf:"varint,1,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	RamGb                float64  `protobuf:"fixed64,2,opt,name=ram_gb,json=ramGb,proto3" json:"ram_gb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4ff6184b07e587a, []int{0}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetCpuCores() int32 {
	if m != nil {
		return m.CpuCores
	}
	return 0
}

func (m *Info) GetRamGb() float64 {
	if m != nil {
		return m.RamGb
	}
	return 0
}

type Volume struct {
	HostPath             string   `protobuf:"bytes,1,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	ContainerPath        string   `protobuf:"bytes,2,opt,name=container_path,json=containerPath,proto3" json:"container_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4ff6184b07e587a, []int{1}
}

func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (m *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(m, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetHostPath() string {
	if m != nil {
		return m.HostPath
	}
	return ""
}

func (m *Volume) GetContainerPath() string {
	if m != nil {
		return m.ContainerPath
	}
	return ""
}

type State struct {
	Exited               bool                 `protobuf:"varint,1,opt,name=exited,proto3" json:"exited,omitempty"`
	ExitCode             int32                `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Start                *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	Stdout               string               `protobuf:"bytes,5,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               string               `protobuf:"bytes,6,opt,name=stderr,proto3" json:"stderr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4ff6184b07e587a, []int{2}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetExited() bool {
	if m != nil {
		return m.Exited
	}
	return false
}

func (m *State) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *State) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *State) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *State) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

func (m *State) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

type Container struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image                string            `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Command              []string          `protobuf:"bytes,3,rep,name=command,proto3" json:"command,omitempty"`
	WorkDir              string            `protobuf:"bytes,4,opt,name=work_dir,json=workDir,proto3" json:"work_dir,omitempty"`
	Outputs              []*Volume         `protobuf:"bytes,5,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Inputs               []*Volume         `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Env                  map[string]string `protobuf:"bytes,7,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Container) Reset()         { *m = Container{} }
func (m *Container) String() string { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()    {}
func (*Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4ff6184b07e587a, []int{3}
}

func (m *Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Container.Unmarshal(m, b)
}
func (m *Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Container.Marshal(b, m, deterministic)
}
func (m *Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Container.Merge(m, src)
}
func (m *Container) XXX_Size() int {
	return xxx_messageInfo_Container.Size(m)
}
func (m *Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Container proto.InternalMessageInfo

func (m *Container) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Container) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Container) GetWorkDir() string {
	if m != nil {
		return m.WorkDir
	}
	return ""
}

func (m *Container) GetOutputs() []*Volume {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *Container) GetInputs() []*Volume {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Container) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func init() {
	proto.RegisterType((*Info)(nil), "pb.Info")
	proto.RegisterType((*Volume)(nil), "pb.Volume")
	proto.RegisterType((*State)(nil), "pb.State")
	proto.RegisterType((*Container)(nil), "pb.Container")
	proto.RegisterMapType((map[string]string)(nil), "pb.Container.EnvEntry")
}

func init() { proto.RegisterFile("worker.proto", fileDescriptor_e4ff6184b07e587a) }

var fileDescriptor_e4ff6184b07e587a = []byte{
	// 503 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0x86, 0x49, 0xb2, 0x49, 0x93, 0xb3, 0xdb, 0x22, 0x83, 0x96, 0x98, 0xbd, 0xb0, 0x14, 0x85,
	0xa0, 0x92, 0x95, 0x8a, 0x8b, 0xec, 0x6d, 0x2d, 0x8b, 0xe0, 0x85, 0xcc, 0x8a, 0x5e, 0x86, 0x49,
	0x32, 0xdb, 0x86, 0x36, 0x99, 0x61, 0x72, 0x52, 0xed, 0x6b, 0xf8, 0x5c, 0x5e, 0xf8, 0x48, 0x32,
	0x93, 0xa4, 0xa2, 0xcb, 0x22, 0xde, 0xcd, 0x7f, 0xe6, 0x9b, 0x99, 0xf3, 0xff, 0x73, 0xe0, 0xec,
	0xab, 0x50, 0x5b, 0xae, 0x12, 0xa9, 0x04, 0x0a, 0x62, 0xcb, 0x2c, 0x7a, 0xb2, 0x16, 0x62, 0xbd,
	0xe3, 0x17, 0xa6, 0x92, 0xb5, 0xb7, 0x17, 0x58, 0x56, 0xbc, 0x41, 0x56, 0xc9, 0x0e, 0x8a, 0xce,
	0xff, 0x06, 0x78, 0x25, 0xf1, 0xd0, 0x6d, 0xce, 0xaf, 0xe0, 0xe4, 0x7d, 0x7d, 0x2b, 0xc8, 0x39,
	0x04, 0xb9, 0x6c, 0xd3, 0x5c, 0x28, 0xde, 0x84, 0xd6, 0xcc, 0x8a, 0x5d, 0xea, 0xe7, 0xb2, 0x5d,
	0x6a, 0x4d, 0x1e, 0x81, 0xa7, 0x58, 0x95, 0xae, 0xb3, 0xd0, 0x9e, 0x59, 0xb1, 0x45, 0x5d, 0xc5,
	0xaa, 0xeb, 0x6c, 0xfe, 0x01, 0xbc, 0xcf, 0x62, 0xd7, 0x56, 0x5c, 0x9f, 0xde, 0x88, 0x06, 0x53,
	0xc9, 0x70, 0x63, 0x4e, 0x07, 0xd4, 0xd7, 0x85, 0x8f, 0x0c, 0x37, 0xe4, 0x19, 0x4c, 0x72, 0x51,
	0x23, 0x2b, 0x6b, 0xae, 0x3a, 0xc2, 0x36, 0xc4, 0xf8, 0x58, 0xd5, 0xd8, 0xfc, 0x87, 0x05, 0xee,
	0x0d, 0x32, 0xe4, 0x64, 0x0a, 0x1e, 0xff, 0x56, 0x22, 0x2f, 0xcc, 0x55, 0x3e, 0xed, 0x95, 0x7e,
	0x45, 0xaf, 0xd2, 0x5c, 0x14, 0xdc, 0xdc, 0xe1, 0x52, 0x5f, 0x17, 0x96, 0xa2, 0xe0, 0xe4, 0x15,
	0xb8, 0x0d, 0x32, 0x85, 0xa1, 0x33, 0xb3, 0xe2, 0xd3, 0x45, 0x94, 0x74, 0xae, 0x93, 0xc1, 0x75,
	0xf2, 0x69, 0x88, 0x85, 0x76, 0x20, 0x79, 0x09, 0x0e, 0xaf, 0x8b, 0xf0, 0xe4, 0x9f, 0xbc, 0xc6,
	0x74, 0x53, 0x0d, 0x16, 0xa2, 0xc5, 0xd0, 0x35, 0xdd, 0xf7, 0xaa, 0xaf, 0x73, 0xa5, 0x42, 0xef,
	0x58, 0xe7, 0x4a, 0xcd, 0xbf, 0xdb, 0x10, 0x2c, 0x07, 0x83, 0x64, 0x02, 0x76, 0x59, 0xf4, 0xc9,
	0xd8, 0x65, 0x41, 0x1e, 0x82, 0x5b, 0x56, 0x6c, 0xcd, 0xfb, 0x28, 0x3a, 0x41, 0x42, 0x18, 0xe5,
	0xa2, 0xaa, 0x58, 0x5d, 0x84, 0xce, 0xcc, 0x89, 0x03, 0x3a, 0x48, 0xf2, 0x18, 0x7c, 0xfd, 0xf1,
	0x69, 0x51, 0x2a, 0xd3, 0x70, 0x40, 0x47, 0x5a, 0xbf, 0x2b, 0x15, 0x79, 0x0a, 0x23, 0xd1, 0xa2,
	0x6c, 0xb1, 0x09, 0xdd, 0x99, 0x13, 0x9f, 0x2e, 0x20, 0x91, 0x59, 0xd2, 0x7d, 0x0c, 0x1d, 0xb6,
	0xc8, 0x1c, 0xbc, 0xb2, 0x36, 0x90, 0x77, 0x07, 0xea, 0x77, 0x48, 0xac, 0x03, 0xd9, 0x87, 0x23,
	0x03, 0x4c, 0x35, 0x70, 0x34, 0x90, 0xac, 0xea, 0xfd, 0xaa, 0x46, 0x75, 0xd0, 0x61, 0xec, 0xa3,
	0x4b, 0xf0, 0x87, 0x02, 0x79, 0x00, 0xce, 0x96, 0x1f, 0x7a, 0x6f, 0x7a, 0xa9, 0xcd, 0xed, 0xd9,
	0xae, 0x3d, 0x9a, 0x33, 0xe2, 0xca, 0x7e, 0x6b, 0x2d, 0x7e, 0x5a, 0xe0, 0x7d, 0x31, 0x03, 0x4c,
	0x5e, 0xc0, 0xe8, 0x9a, 0xa3, 0x99, 0xbd, 0xe9, 0x9d, 0xec, 0x57, 0x7a, 0x42, 0x23, 0x5f, 0xb7,
	0x60, 0x88, 0x37, 0x70, 0x46, 0xdb, 0xfa, 0x77, 0x9c, 0xe3, 0x3f, 0x9a, 0x8b, 0xee, 0xb9, 0x80,
	0x3c, 0x87, 0xc9, 0x72, 0xc3, 0xf3, 0xed, 0xbd, 0x07, 0x03, 0x2d, 0xbb, 0xa1, 0xbb, 0x84, 0xf1,
	0x0d, 0x0a, 0xf9, 0xbf, 0x6f, 0x64, 0x9e, 0xd1, 0xaf, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x29,
	0x33, 0x9a, 0xf2, 0x99, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkerClient is the client API for Worker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkerClient interface {
	GetInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Info, error)
	RunContainer(ctx context.Context, in *Container, opts ...grpc.CallOption) (*empty.Empty, error)
	CheckContainer(ctx context.Context, in *Container, opts ...grpc.CallOption) (*State, error)
	StopContainer(ctx context.Context, in *Container, opts ...grpc.CallOption) (*empty.Empty, error)
}

type workerClient struct {
	cc *grpc.ClientConn
}

func NewWorkerClient(cc *grpc.ClientConn) WorkerClient {
	return &workerClient{cc}
}

func (c *workerClient) GetInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/pb.Worker/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) RunContainer(ctx context.Context, in *Container, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.Worker/RunContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) CheckContainer(ctx context.Context, in *Container, opts ...grpc.CallOption) (*State, error) {
	out := new(State)
	err := c.cc.Invoke(ctx, "/pb.Worker/CheckContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) StopContainer(ctx context.Context, in *Container, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.Worker/StopContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkerServer is the server API for Worker service.
type WorkerServer interface {
	GetInfo(context.Context, *empty.Empty) (*Info, error)
	RunContainer(context.Context, *Container) (*empty.Empty, error)
	CheckContainer(context.Context, *Container) (*State, error)
	StopContainer(context.Context, *Container) (*empty.Empty, error)
}

// UnimplementedWorkerServer can be embedded to have forward compatible implementations.
type UnimplementedWorkerServer struct {
}

func (*UnimplementedWorkerServer) GetInfo(ctx context.Context, req *empty.Empty) (*Info, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}
func (*UnimplementedWorkerServer) RunContainer(ctx context.Context, req *Container) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunContainer not implemented")
}
func (*UnimplementedWorkerServer) CheckContainer(ctx context.Context, req *Container) (*State, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckContainer not implemented")
}
func (*UnimplementedWorkerServer) StopContainer(ctx context.Context, req *Container) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopContainer not implemented")
}

func RegisterWorkerServer(s *grpc.Server, srv WorkerServer) {
	s.RegisterService(&_Worker_serviceDesc, srv)
}

func _Worker_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).GetInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_RunContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Container)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).RunContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/RunContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).RunContainer(ctx, req.(*Container))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_CheckContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Container)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).CheckContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/CheckContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).CheckContainer(ctx, req.(*Container))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_StopContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Container)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).StopContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/StopContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).StopContainer(ctx, req.(*Container))
	}
	return interceptor(ctx, in, info, handler)
}

var _Worker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Worker",
	HandlerType: (*WorkerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _Worker_GetInfo_Handler,
		},
		{
			MethodName: "RunContainer",
			Handler:    _Worker_RunContainer_Handler,
		},
		{
			MethodName: "CheckContainer",
			Handler:    _Worker_CheckContainer_Handler,
		},
		{
			MethodName: "StopContainer",
			Handler:    _Worker_StopContainer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "worker.proto",
}
